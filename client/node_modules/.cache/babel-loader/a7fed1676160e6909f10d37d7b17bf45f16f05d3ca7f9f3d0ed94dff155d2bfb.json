{"ast":null,"code":"import { colors } from \"@mui/material\";\n\n// const getDesignTokens = mode => ({\n//   palette: {\n//     mode, \n//     ...(mode === \"light\" ? {\n//       secondary: {\n//         main: colors.green[400]\n//       }  \n//     } : {\n//       secondary: {\n//         main: colors.green[800]\n//       }\n//     })\n//   }\n// });\n\nconst getDesignTokens = mode => ({\n  palette: {\n    mode,\n    ...(mode === 'light' ? {\n      // palette values for light mode\n      primary: amber,\n      divider: amber[200],\n      text: {\n        primary: grey[900],\n        secondary: grey[800]\n      }\n    } : {\n      // palette values for dark mode\n      primary: deepOrange,\n      divider: deepOrange[700],\n      background: {\n        default: deepOrange[900],\n        paper: deepOrange[900]\n      },\n      text: {\n        primary: '#fff',\n        secondary: grey[500]\n      }\n    })\n  }\n});\nexport default getDesignTokens;","map":{"version":3,"names":["colors","getDesignTokens","mode","palette","primary","amber","divider","text","grey","secondary","deepOrange","background","default","paper"],"sources":["C:/Users/0v1al/Desktop/green_cells/client/src/theme.js"],"sourcesContent":["import { colors } from \"@mui/material\";\r\n\r\n// const getDesignTokens = mode => ({\r\n//   palette: {\r\n//     mode, \r\n//     ...(mode === \"light\" ? {\r\n//       secondary: {\r\n//         main: colors.green[400]\r\n//       }  \r\n//     } : {\r\n//       secondary: {\r\n//         main: colors.green[800]\r\n//       }\r\n//     })\r\n//   }\r\n// });\r\n\r\nconst getDesignTokens = (mode: PaletteMode) => ({\r\n  palette: {\r\n    mode,\r\n    ...(mode === 'light'\r\n      ? {\r\n          // palette values for light mode\r\n          primary: amber,\r\n          divider: amber[200],\r\n          text: {\r\n            primary: grey[900],\r\n            secondary: grey[800],\r\n          },\r\n        }\r\n      : {\r\n          // palette values for dark mode\r\n          primary: deepOrange,\r\n          divider: deepOrange[700],\r\n          background: {\r\n            default: deepOrange[900],\r\n            paper: deepOrange[900],\r\n          },\r\n          text: {\r\n            primary: '#fff',\r\n            secondary: grey[500],\r\n          },\r\n        }),\r\n  },\r\n});\r\n\r\n\r\nexport default getDesignTokens;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,IAAiB,KAAM;EAC9CC,OAAO,EAAE;IACPD,IAAI;IACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;MACE;MACAE,OAAO,EAAEC,KAAK;MACdC,OAAO,EAAED,KAAK,CAAC,GAAG,CAAC;MACnBE,IAAI,EAAE;QACJH,OAAO,EAAEI,IAAI,CAAC,GAAG,CAAC;QAClBC,SAAS,EAAED,IAAI,CAAC,GAAG;MACrB;IACF,CAAC,GACD;MACE;MACAJ,OAAO,EAAEM,UAAU;MACnBJ,OAAO,EAAEI,UAAU,CAAC,GAAG,CAAC;MACxBC,UAAU,EAAE;QACVC,OAAO,EAAEF,UAAU,CAAC,GAAG,CAAC;QACxBG,KAAK,EAAEH,UAAU,CAAC,GAAG;MACvB,CAAC;MACDH,IAAI,EAAE;QACJH,OAAO,EAAE,MAAM;QACfK,SAAS,EAAED,IAAI,CAAC,GAAG;MACrB;IACF,CAAC;EACP;AACF,CAAC,CAAC;AAGF,eAAeP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}